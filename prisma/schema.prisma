// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  reviews   Review[]
  ratings   Rating[]
}

model Product {
  product_id        Int     @id @default(autoincrement())
  product_name      String
  product_desc      String
  sizes             String[]
  price             Int
  product_pictures  Bytes?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  reviews           Review[]
  ratings           Rating[]
}

enum Scale {
  Small
  Fit
  Large
}

model Review {
  review_id   Int      @id @default(autoincrement())
  product_id  Int
  user_id     Int
  description String
  fit_scale   Scale
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  product     Product  @relation(fields: [product_id], references: [product_id])
  user        User     @relation(fields: [user_id], references: [id])
  ratings     Rating[]
}

model Rating {
  user_id    Int
  product_id Int
  value      Int
  review_id  Int

  user       User     @relation(fields: [user_id], references: [id])
  product    Product  @relation(fields: [product_id], references: [product_id])
  review     Review   @relation(fields: [review_id], references: [review_id])

  @@id([user_id, product_id, review_id])
}
